#1.5.9
#Вам дается последовательность целых чисел и вам нужно ее обработать и вывести на экран сумму первой пятерки чисел из этой последовательности, 
#затем сумму второй пятерки, и т. д.

#Но последовательность не дается вам сразу целиком. С течением времени к вам поступают её последовательные части. 
#Например, сначала первые три элемента, потом следующие шесть, потом следующие два и т. д.

#Реализуйте класс Buffer, который будет накапливать в себе элементы последовательности и выводить сумму 
#пятерок последовательных элементов по мере их накопления.

#Одним из требований к классу является то, что он не должен хранить в себе больше элементов, чем ему действительно необходимо, 
#т. е. он не должен хранить элементы, которые уже вошли в пятерку, для которой была выведена сумма.


class Buffer:
    
    def __init__(self, tot = 0, arr = []):   
        self.tot = tot
        self.arr = arr
        
    def add(self, *args):
        self.kkk = args
        
        for i in self.kkk:
            self.arr.append(i)
            if len(self.arr) % 5 == 0:
                self.tot = 0
                
                for i in self.arr[-1:-6:-1]:
                    self.tot += i
                if self.tot != 0:
                    print(self.tot)
                    
    def get_current_part(self):
        return (list(reversed(self.arr[-1: -(len(self.arr) % 5) - 1: -1])))

